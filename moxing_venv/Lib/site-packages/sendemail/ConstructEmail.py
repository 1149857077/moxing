# -*- coding: utf-8 -*-
# Time    : 2019/4/25 21:52
# Author  : Amd794
# Email   : 2952277346@qq.com
# Github  : https://github.com/Amd794


# TODO 导入构造邮件模块
from email.header import Header
from email.mime.text import MIMEText
from email.utils import parseaddr, formataddr
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from sendemail.setting import from_name, to_name
import os


__all__ = ['ConstructEmail']


class ConstructEmail():
    '''
        构造邮件:
            1. 纯文本邮件, textConnent
            2. html邮件, htmlConnent
            3. 携带附件, annex
    '''
    def __init__(self):
        pass

    # TODO 处理中文字符乱码
    def _format_addr(self, s):
        name, addr = parseaddr(s)
        return formataddr((Header(name, 'utf-8').encode(), addr))

    # TODO 设置联系人信息
    def _contact(self, msg, from_addr, to_addr, title):
        msg['From'] = self._format_addr('%s <%s>' % (from_name, from_addr))
        msg['To'] = self._format_addr('%s <%s>' % (to_name, to_addr))
        msg['Subject'] = Header(title, 'utf-8').encode()

    # TODO 普通邮件
    def textConnent(self, from_addr, to_addr, content, title):
        msg = MIMEText(content, 'plain', 'utf-8')
        self._contact(msg, from_addr, to_addr, title)
        return msg

    # TODO HTML邮件
    def htmlcontent(self, from_addr, to_addr, content, title):
        msg = MIMEText(content, 'html', 'utf-8')
        self._contact(msg, from_addr, to_addr, title)
        return msg

    # TODO 附件
    def annex(self, path, content, from_addr, to_addr, title):
        # 邮件对象:
        msg = MIMEMultipart()
        # 添加附件就是加上一个MIMEBase，从本地读取一个图片:
        msg.attach(content)
        self._contact(msg, from_addr, to_addr, title)
        filepath, houzui = os.path.splitext(path)  # ('imgs/336', '.jpg')
        basefilepath, filename = os.path.split(path)  # ('imgs', '336.jpg')
        with open(path, 'rb') as f:
            # 设置附件的MIME和文件名，这里是png类型:
            mime = MIMEBase('zip', houzui, filename=filename)
            # 加上必要的头信息:
            mime.add_header('Content-Disposition', 'attachment', filename=filename)
            mime.add_header('Content-ID', '<0>')
            mime.add_header('X-Attachment-Id', '0')
            # 把附件的内容读进来:
            mime.set_payload(f.read())
            # 用Base64编码:
            encoders.encode_base64(mime)
            # 添加到MIMEMultipart:
            msg.attach(mime)
            return msg


if __name__ == '__main__':
    print(ConstructEmail.__doc__)
    print(ConstructEmail.textConnent('d','d','sd', 'sd'))
